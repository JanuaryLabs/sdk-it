import { z } from "zod";

export class ParseError<T extends z.ZodType<any, any, any>> {
  constructor(public errors: z.typeToFlattenedError<T, z.ZodIssue>) {}
}

export function parse<T extends z.ZodType<any, any, any>>(schema: T, input: unknown) {
  const result = schema.safeParse(input);
  if (!result.success) {
    const errors = result.error.flatten((issue) => issue);
    return [null, new ParseError(errors)];
  }
  return [result.data as z.infer<T>, null];
}
