type EndpointOutput<K extends keyof typeof schemas> = Extract<
  Unionize<(typeof schemas)[K]['output']>,
  SuccessfulResponse
>;

type EndpointError<K extends keyof typeof schemas> = Extract<
  Unionize<(typeof schemas)[K]['output']>,
  ProblematicResponse
>;

export type Endpoints = {
  [K in keyof typeof schemas]: {
    input: z.infer<(typeof schemas)[K]['schema']>;
    output: <% if (outputType === 'default') { %>EndpointOutput<K>['data']<% } else { %>EndpointOutput<K><% } %>;
    error: EndpointError<K> | ParseError<(typeof schemas)[K]['schema']>;
  };
};